//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "storages")]
#[serde(rename_all = "camelCase")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub container: String,
    pub name: String,
    pub mime: Option<String>,
    pub extension: Option<String>,
    pub path: String,
    #[serde(skip)]
    pub created_at: DateTime,
    #[serde(skip)]
    pub created_by_id: Option<String>,
    #[serde(skip)]
    pub updated_at: DateTime,
    #[serde(skip)]
    pub updated_by_id: Option<String>,
    #[serde(skip)]
    pub deleted_at: Option<DateTime>,
    #[serde(skip)]
    pub deleted_by_id: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
